# OS X to ARM cross compiler setup
set gcc_bin_prefix arm-elf-

# source gcc.tmk
source [file join $::tmk::compilersConfigDir gcc.tmk]

# set arm-specific flags
set base_CFLAGS {-fno-builtin-fprintf -fno-builtin-printf -ffunction-sections -fdata-sections}
foreach flag {FLAGS_PRF FLAGS_DBG FLAGS_STD FLAGS_OPT FLAGS_MAX} {
	config set $flag [concat $base_CFLAGS [set $flag]]
}

config set FLAGS_STD [concat $FLAGS_STD -Os -DNDEBUG]
config set FLAGS_OPT [concat $FLAGS_OPT -DNDEBUG]
config set FLAGS_MAX [concat $FLAGS_MAX -DNDEBUG]

set base_LDFLAGS {-nostdlib}
foreach flag {LDFLAGS_PRF LDFLAGS_DBG LDFLAGS_STD LDFLAGS_OPT LDFLAGS_MAX} {
	config set $flag [concat $base_LDFLAGS [set $flag]]
}

# link an executable
config proc link_exe {prog obj libspec flags opt} {

    set flags [concat $flags [meta_option_flags $opt]]
    set libs  [make_lib_options $libspec $opt]

	set flags [concat $flags [exe_additional_opts]]

    variable EXECUTABLE
	set cmd [concat [list cmd [file nativename $EXECUTABLE]] $flags]
    set cmd [concat $cmd [list "-o" $prog] $obj $libs "-lgcc"]
    uplevel \#0 $cmd 

	if [lcontains $opt "strip"] {
		strip $prog
    }

	uplevel \#0 [list cmd arm-elf-objcopy -O ihex $prog $prog.hex]
	uplevel \#0 [list cmd arm-elf-size --target=ihex $prog.hex]
	
	uplevel \#0 [list cmd arm-elf-objcopy -O binary $prog $prog.bin]
	uplevel \#0 [list cmd arm-elf-size --target=binary $prog.bin]
}
