#	Title: protobuf Module
#
# =========================================================================
#
# 		TMK module for building protocol buffers
# ===========================================================================

lappend ::link::SYSLIBS protobuf

set_ifndef PROJINCS {}

eval_after {
    log_msg "Processing protocol buffer definitions"
    foreach file [glob -nocomplain "*.proto"] {
        set baseName [lindex [split $file "."] 0]
        
        set cachedmodtime {}
        read_file [file join [tmk_output_dir] $baseName.mtime] cachedmodtime
        
        if {![file exists [tmk_output_dir]]} {
            file mkdir [tmk_output_dir]
        }
        
        catch { set lastmodtime [file mtime $file] }
        write_file [file join [tmk_output_dir] $baseName.mtime] lastmodtime
        
        set cppfile "$baseName.pb.cc"
        set header "$baseName.pb.h"
        
        if {![file exists $cppfile] || ![file exists $header] || $cachedmodtime != $lastmodtime} {
            set rule {
                if { ![tmk::cleaning] } {
                    
                    set args {}
                    
                    foreach projinc \$protobuf::PROJINCS {
                        lappend args "-I[file join $::PROJROOT \$projinc]"
                    }
                    
                    # Done immediately rather than as a target so that the files are there when the cxx
                    # module looks for things to compile
                    if {\$args != {}} {
        			    cmd protoc -I. [join \$args] --cpp_out=. $file
    			    } else {
    			        cmd protoc -I. --cpp_out=. $file
    			    }
                } else {
                    file delete -force $baseName.pb.cc
                    file delete -force $baseName.pb.h
                }
            }

            target $baseName $file [subst -nocommands $rule]
            depend $baseName $file
            build $baseName  
        }      
    }
}